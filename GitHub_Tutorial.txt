Hello World
Nice to meet you

/*
1. git add 로 기록할 파일부터 고른다.
2. git commit 를 사용해 고른 파일을 기록한다.

// 작업 폴더 
(git add)
    |
    |
// Staging area
(git commit)
    |
    |
// Repository(저장소)
*/

// 익히면 좋은 팁
1. commit 전에 파일 차이점 확인하는 것도 좋음...
2. commit 전에 현재 파일 vs 최근 commit 차이점 확인하는 것도 좋음..

// git --> 파일 버전 기록해주는 프로그램
// Repository -> git이 파일 기록해두는 장소
// 온라인 Repository 만들면  
1. 컴퓨터 고장나도 안심
2. 협업 가능
// github.com은 기본브랜치 이름을 main으로 강요함
// git branch -M main ---> 기본 브런치 이름을 main 으로 변경해줌.
// 로컬 -> 원격 저장소 업로드는 git push -u 원격저장소주소 올릴 로컬 브랜치명
// git에서 변수 문법 사용 가능 --> 예시) git remote add origin 원격 저장소 주소 ~~> origin 이라는 변수에 깃 원격 저장소 주소를 할당함.
// 변수목록을 확인하고 싶다면 --> git remote -v
// git push 할 때, -u  추가하면 방금 입력한 주소 기억하라는 뜻 --> 예시) git push -u origin main
// 원격저장소에 있던거 그대로 내려받기 --> git clone https://원격저장소주소
// 저장소에 올리지 않는 파일들은 --> .gitignore
// 원격저장소에 새로운게 생기면 git push 못함.
// 원격저장소 최신 내용이 로컬저장소에 있을 때만 git push 가능
// 원격저장소 -> 로컬저장소 ~~> git pull 원격저장소주소 브랜치명
// git pull 할 때 브랜치 명시 가능
// git pll -> git fetch + git merge
1. git fetch : 원격저장소 신규 commit 가져오세요.
2. git merge : 내 브랜치에 merge(=합치기)~~>(Conflict 발생 가능)
// 핵심 -> git push 전에 git pull 부터 하자.